@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using System.Security.Claims
@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Nav

<div class="layout-root">

  <!-- NAVBAR SUPERIOR con Bootstrap Icons -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary fixed-top shadow-sm">
    <div class="container-fluid">
      <a class="navbar-brand fw-semibold d-flex align-items-center gap-2" href="/">
        <i class="bi bi-grid-1x2-fill"></i>
        <span>MultiBiz</span>
      </a>

      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#topNav" aria-controls="topNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="topNav">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <NavLink href="/home" class="nav-link d-flex align-items-center gap-2" ActiveClass="active">
              <i class="bi bi-house-door"></i><span>Inicio</span>
            </NavLink>
          </li>
          <li class="nav-item">
            <NavLink href="/admin/users" class="nav-link d-flex align-items-center gap-2" ActiveClass="active">
              <i class="bi bi-gear"></i><span>Administrador</span>
            </NavLink>
          </li>
          <li class="nav-item">
            <NavLink href="/restaurant/kds" class="nav-link d-flex align-items-center gap-2" ActiveClass="active">
              <i class="bi bi-egg-fried"></i><span>Restaurante</span>
            </NavLink>
          </li>
          <li class="nav-item">
            <NavLink href="/barbershop/calendar" class="nav-link d-flex align-items-center gap-2" ActiveClass="active">
              <i class="bi bi-scissors"></i><span>Barbería</span>
            </NavLink>
          </li>
          <li class="nav-item">
            <NavLink href="/settings/global" class="nav-link d-flex align-items-center gap-2" ActiveClass="active">
              <i class="bi bi-sliders"></i><span>Configuración</span>
            </NavLink>
          </li>
        </ul>

        <div class="d-flex align-items-center gap-3">
          @if (!string.IsNullOrWhiteSpace(UserDisplay))
          {
            <span class="text-white-50 small d-none d-md-inline">@UserDisplay</span>
          }
          <button class="btn btn-outline-light btn-sm d-flex align-items-center gap-2" @onclick="Logout">
            <i class="bi bi-box-arrow-right"></i><span>Salir</span>
          </button>
        </div>
      </div>
    </div>
  </nav>

  <!-- CONTENEDOR CON SIDEBAR + CONTENIDO -->
  <div class="container-fluid pt-navbar">
    <div class="row">
      <!-- SIDEBAR IZQUIERDO dinámico -->
      <aside class="col-12 col-md-3 col-lg-2 mb-3 mb-md-0">
        <div class="card shadow-sm">
          <div class="list-group list-group-flush">
            @switch (_module)
            {
              case Module.Admin:
                {
                  <div class="list-group-item fw-semibold text-uppercase small text-muted">Administrador</div>
                  <NavLink href="/admin/users" class="list-group-item list-group-item-action" ActiveClass="active">Usuarios</NavLink>
                  <NavLink href="/admin/tenants" class="list-group-item list-group-item-action" ActiveClass="active">Tenants</NavLink>
                  <NavLink href="/admin/roles" class="list-group-item list-group-item-action" ActiveClass="active">Roles</NavLink>
                  <NavLink href="/admin/modules" class="list-group-item list-group-item-action" ActiveClass="active">Módulos</NavLink>
                  break;
                }
              case Module.Restaurant:
                {
                  <div class="list-group-item fw-semibold text-uppercase small text-muted">Restaurante</div>
                  <NavLink href="/restaurant/kds" class="list-group-item list-group-item-action" ActiveClass="active">KDS</NavLink>
                  <NavLink href="/restaurant/tables" class="list-group-item list-group-item-action" ActiveClass="active">Mesas</NavLink>
                  <NavLink href="/restaurant/menu" class="list-group-item list-group-item-action" ActiveClass="active">Menú</NavLink>
                  <NavLink href="/restaurant/orders" class="list-group-item list-group-item-action" ActiveClass="active">Órdenes</NavLink>
                  <NavLink href="/restaurant/payments" class="list-group-item list-group-item-action" ActiveClass="active">Pagos</NavLink>
                  break;
                }
              case Module.Barbershop:
                {
                  <div class="list-group-item fw-semibold text-uppercase small text-muted">Barbería</div>
                  <NavLink href="/barbershop/calendar" class="list-group-item list-group-item-action" ActiveClass="active">Calendario</NavLink>
                  <NavLink href="/barbershop/appointments" class="list-group-item list-group-item-action" ActiveClass="active">Citas</NavLink>
                  <NavLink href="/barbershop/reports" class="list-group-item list-group-item-action" ActiveClass="active">Reportes</NavLink>
                  break;
                }
              case Module.Settings:
                {
                  <div class="list-group-item fw-semibold text-uppercase small text-muted">Configuración</div>
                  <NavLink href="/settings/email" class="list-group-item list-group-item-action" ActiveClass="active">Correo / SMTP</NavLink>
                  <NavLink href="/settings/sms" class="list-group-item list-group-item-action" ActiveClass="active">SMS (labsMobile)</NavLink>
                  <NavLink href="/settings/whatsapp" class="list-group-item list-group-item-action" ActiveClass="active">WhatsApp (Meta)</NavLink>
                  <NavLink href="/settings/global" class="list-group-item list-group-item-action" ActiveClass="active">Global</NavLink>
                  break;
                }
              default:
                {
                  <div class="list-group-item fw-semibold text-uppercase small text-muted">Bienvenido</div>
                  <a class="list-group-item list-group-item-action" href="/home">Ir a inicio</a>
                  break;
                }
            }
          </div>
        </div>
      </aside>

      <!-- CONTENIDO -->
      <main class="col-12 col-md-9 col-lg-10">
        @Body
      </main>
    </div>
  </div>
</div>

@code {
  private string? UserDisplay;
  private Module _module = Module.None;

  protected override void OnInitialized()
  {
      Nav.LocationChanged += OnLocationChanged;
      _module = ResolveModule(Nav.Uri);
  }

  protected override async Task OnInitializedAsync()
  {
      var state = await AuthProvider.GetAuthenticationStateAsync();
      var user = state.User;
      if (user?.Identity?.IsAuthenticated == true)
      {
          var name = user.FindFirst("unique_name")?.Value
                     ?? user.Identity?.Name
                     ?? user.FindFirst(ClaimTypes.Name)?.Value
                     ?? "Usuario";
          var tenant = user.FindFirst("tenant")?.Value;
          UserDisplay = string.IsNullOrWhiteSpace(tenant) ? name : $"{name} · {tenant}";
      }
  }

  private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
  {
      _module = ResolveModule(e.Location);
      InvokeAsync(StateHasChanged);
  }

  private Module ResolveModule(string? uri)
  {
      if (string.IsNullOrWhiteSpace(uri)) return Module.None;
      var path = new Uri(uri).AbsolutePath.ToLowerInvariant();
      if (path.StartsWith("/admin")) return Module.Admin;
      if (path.StartsWith("/restaurant")) return Module.Restaurant;
      if (path.StartsWith("/barbershop")) return Module.Barbershop;
      if (path.StartsWith("/settings")) return Module.Settings;
      return Module.None;
  }

  private async Task Logout()
  {
      await Storage.RemoveItemAsync("authToken");
      if (AuthProvider is MultiBiz.Client.Services.AuthStateProvider asp)
      {
          asp.MarkUserAsLoggedOut();
      }
      Nav.NavigateTo("/login", true);
  }

  public void Dispose()
  {
      Nav.LocationChanged -= OnLocationChanged;
  }

  private enum Module { None, Admin, Restaurant, Barbershop, Settings }
}

<style>
  .pt-navbar { padding-top: 72px; }
  .layout-root { min-height: 100vh; background-color: #f8f9fa; }
  .navbar .nav-link .bi { font-size: 1.05rem; line-height: 1; }
  @@media (min-width: 992px) {
    aside .list-group-item { border-left: 0; border-right: 0; }
  }
</style>
